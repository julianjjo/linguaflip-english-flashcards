---
interface NavigationProps {
  currentCardOrder?: number;
  reviewDeckSize?: number;
  showBackToDashboard?: boolean;
}

const {
  currentCardOrder = 0,
  reviewDeckSize = 0,
  showBackToDashboard = true
} = Astro.props as NavigationProps;
---

<div class="mt-8 w-full max-w-md mx-auto space-y-4">
  <!-- Study Progress -->
  {reviewDeckSize > 0 && (
    <div class="flex justify-center items-center">
      <span class="text-white dark:text-gray-900 font-medium text-lg bg-black dark:bg-gray-200 bg-opacity-20 dark:bg-opacity-80 px-4 py-2 rounded-lg shadow">
        Tarjeta: {currentCardOrder} / {reviewDeckSize}
      </span>
    </div>
  )}

  <!-- Navigation Links -->
  <div class="flex justify-center items-center gap-3">
    {showBackToDashboard && (
      <a
        href="/dashboard"
        class="inline-flex items-center gap-2 bg-white/10 hover:bg-white/20 dark:bg-gray-700 dark:hover:bg-gray-600 text-white dark:text-white font-medium px-4 py-2 rounded-lg transition-all duration-200 backdrop-blur-sm"
      >
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
        </svg>
        Dashboard
      </a>
    )}

    <a
      href="/study"
      class="inline-flex items-center gap-2 bg-primary-600 hover:bg-primary-700 dark:bg-primary-700 dark:hover:bg-primary-600 text-white font-medium px-4 py-2 rounded-lg transition-all duration-200"
    >
      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
      </svg>
      Estudiar
    </a>
  </div>
</div>
class d{constructor(){this.isAuthenticated=!1,this.user=null,this.flashcards=[],this.currentCardIndex=0,this.isFlipped=!1,this.cardStartTime=Date.now(),this.init()}async init(){if(await this.checkAuth(),!this.isAuthenticated){this.showAuthRequired(),this.setupAuthButtons();return}await this.loadFlashcards(),this.flashcards.length===0?(this.showNoCards(),this.setupCreateCardButton()):(this.showStudyContent(),this.setupStudyControls(),this.displayCurrentCard())}async checkAuth(){try{const t=await fetch("/api/auth/me",{credentials:"include"});if(t.ok){const e=await t.json();this.isAuthenticated=e.success,this.user=e.data?.user||null}}catch(t){console.error("Auth check failed:",t)}}async loadFlashcards(){if(this.isAuthenticated)try{const t=await fetch("/api/flashcards",{credentials:"include"});if(t.ok){let s=(await t.json()).data?.flashcards||[];s=s.map(n=>((!n.id||n.id===null||n.id===void 0)&&(console.log("Fixing card with null ID:",n.english),n.id=`card_${Date.now()}_${Math.random().toString(36).substring(2,11)}`),n)),this.flashcards=s,console.log("Loaded flashcards:",this.flashcards)}}catch(t){console.error("Failed to load flashcards:",t)}}showAuthRequired(){this.hideAll();const t=document.getElementById("auth-required-state");t&&t.classList.remove("hidden")}showNoCards(){this.hideAll();const t=document.getElementById("no-cards-state");t&&t.classList.remove("hidden")}showStudyContent(){this.hideAll();const t=document.getElementById("study-content");t&&t.classList.remove("hidden")}hideAll(){["loading-state","no-cards-state","auth-required-state","study-content"].forEach(e=>{const s=document.getElementById(e);s&&s.classList.add("hidden")})}setupAuthButtons(){const t=document.getElementById("login-btn"),e=document.getElementById("register-btn");t&&t.addEventListener("click",()=>{window.dispatchEvent(new CustomEvent("open-auth-modal",{detail:{mode:"login"}}))}),e&&e.addEventListener("click",()=>{window.dispatchEvent(new CustomEvent("open-auth-modal",{detail:{mode:"register"}}))})}setupCreateCardButton(){const t=document.getElementById("create-first-card-btn");t&&t.addEventListener("click",()=>{window.dispatchEvent(new CustomEvent("open-create-modal"))})}setupStudyControls(){const t=document.getElementById("flip-btn"),e=document.getElementById("next-btn");t&&t.addEventListener("click",()=>this.flipCard()),e&&e.addEventListener("click",()=>this.nextCard())}displayCurrentCard(){if(this.flashcards.length===0)return;const t=this.flashcards[this.currentCardIndex],e=document.getElementById("flashcard-container");if(e&&t){const s=this.isFlipped?t.back||t.spanish:t.front||t.english,n=this.isFlipped;e.innerHTML=`
            <div class="bg-gradient-to-br ${n?"from-blue-500 to-blue-600":"from-green-500 to-green-600"} text-white rounded-xl p-8 text-center min-h-[200px] flex items-center justify-center cursor-pointer" onclick="studyManager.flipCard()">
              <div>
                <div class="text-2xl font-bold mb-2">${s}</div>
                <div class="text-sm opacity-75">${n?"Español":"Inglés"}</div>
              </div>
            </div>
          `}this.updateProgress()}flipCard(){this.isFlipped=!this.isFlipped,this.displayCurrentCard();const t=document.getElementById("recall-controls");t&&(t.style.display=this.isFlipped?"block":"none")}async rateCard(t){if(this.flashcards.length===0)return;const e=this.flashcards[this.currentCardIndex];if(e)try{console.log("Frontend - attempting to rate card:",e),console.log("Frontend - cardId being sent:",e.id,"type:",typeof e.id);const s=await fetch("/api/flashcards/review",{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({cardId:e.id,quality:t,responseTime:Date.now()-this.cardStartTime||0})}),n=await s.json();if(s.ok&&n.success){const r=n.data.flashcard;r&&(this.flashcards[this.currentCardIndex]=r),this.nextCard()}else console.error("Failed to rate card:",n.error)}catch(s){console.error("Error rating card:",s)}}nextCard(){this.currentCardIndex=(this.currentCardIndex+1)%this.flashcards.length,this.isFlipped=!1,this.cardStartTime=Date.now(),this.displayCurrentCard();const t=document.getElementById("recall-controls");t&&(t.style.display="none")}updateProgress(){const t=document.getElementById("session-progress"),e=document.getElementById("progress-bar");if(t&&(t.textContent=`${this.currentCardIndex+1} / ${this.flashcards.length}`),e){const s=(this.currentCardIndex+1)/this.flashcards.length*100;e.style.width=`${s}%`}}}let a;document.addEventListener("DOMContentLoaded",()=>{a=new d});window.rateCurrentCard=i=>{a&&a.rateCard(i)};window.addEventListener("auth-success",()=>{window.location.reload()});window.addEventListener("flashcard-created",()=>{window.location.reload()});

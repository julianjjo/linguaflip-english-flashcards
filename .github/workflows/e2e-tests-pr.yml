name: LinguaFlip E2E Tests (PR)

on:
  pull_request:
    branches: [ main, develop ]
    types: [ opened, synchronize, reopened, ready_for_review ]
  workflow_dispatch:
    inputs:
      browsers:
        description: 'Browsers to test (comma-separated)'
        required: false
        default: 'chromium,firefox'
        type: string
      skip_build:
        description: 'Skip build step (use cache)'
        required: false
        default: false
        type: boolean

env:
  NODE_ENV: test
  CI: true
  BASE_URL: http://localhost:4321

jobs:
  e2e-test-pr:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        browser: ['chromium', 'firefox']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright browsers
      run: npx playwright install --with-deps ${{ matrix.browser }}

    - name: Setup test database
      run: |
        docker run -d \
          --name mongodb-test-pr \
          -p 27017:27017 \
          -e MONGO_INITDB_DATABASE=linguaflip_test_pr \
          mongo:7.0
        echo "MONGODB_URL=mongodb://localhost:27017/linguaflip_test_pr" >> $GITHUB_ENV

    - name: Wait for database
      run: |
        for i in {1..30}; do
          if nc -z localhost 27017; then
            echo "Database is ready!"
            break
          fi
          echo "Waiting for database... ($i/30)"
          sleep 2
        done

    - name: Run database setup
      run: npm run test:setup
      env:
        MONGODB_URL: ${{ env.MONGODB_URL }}

    - name: Build application
      if: ${{ !inputs.skip_build }}
      run: npm run build
      env:
        MONGODB_URL: ${{ env.MONGODB_URL }}

    - name: Start application server
      run: |
        if [ "${{ inputs.skip_build }}" == "true" ]; then
          npm run build:preview &
        else
          npm run preview &
        fi
        SERVER_PID=$!
        echo "SERVER_PID=$SERVER_PID" >> $GITHUB_ENV

        # Wait for server to be ready
        for i in {1..30}; do
          if curl -f http://localhost:4321 > /dev/null 2>&1; then
            echo "Server is ready!"
            break
          fi
          echo "Waiting for server... ($i/30)"
          sleep 2
        done

    - name: Run E2E tests
      run: npx playwright test --project=${{ matrix.browser }} --reporter=line,json
      env:
        BASE_URL: ${{ env.BASE_URL }}
        MONGODB_URL: ${{ env.MONGODB_URL }}
        NODE_ENV: test
        CI: true

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-pr-${{ matrix.browser }}
        path: |
          test-results/
          playwright-report/
        retention-days: 7

    - name: Stop application server
      if: always()
      run: |
        if [ ! -z "$SERVER_PID" ]; then
          kill $SERVER_PID || true
        fi

    - name: Cleanup test database
      if: always()
      run: |
        docker stop mongodb-test-pr || true
        docker rm mongodb-test-pr || true

  pr-check:
    runs-on: ubuntu-latest
    needs: e2e-test-pr
    if: always()

    steps:
    - name: PR Check
      run: |
        if [ "${{ needs.e2e-test-pr.result }}" == "success" ]; then
          echo "‚úÖ All E2E tests passed for PR"
        else
          echo "‚ùå Some E2E tests failed for PR"
          exit 1
        fi

  notify-pr-failure:
    runs-on: ubuntu-latest
    needs: e2e-test-pr
    if: failure()

    steps:
    - name: Notify PR failure
      run: |
        echo "üö® E2E Tests failed on PR #${{ github.event.number }}"
        echo "Check the workflow run for details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

        # Add notification logic here (Slack, Discord, etc.)
        # This will help reviewers know when E2E tests fail on PRs